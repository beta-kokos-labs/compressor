function toCustomRoman(num) {
    if (num < 1 || num > 10**40) {
        throw new Error("Number out of range. Please enter a number between 1 and 10^40.");
    }

    // Define custom values and symbols
    const values = [
        10**40, 5 * 10**39, 10 * 10**39, 50 * 10**39, 100 * 10**39, 
        500 * 10**39, 10**40, 5 * 10**39, 10 * 10**39, 50 * 10**39,
        100 * 10**39, 500 * 10**39, 10**39, 500 * 10**39, 100 * 10**39,
        50 * 10**39, 10 * 10**39, 5 * 10**39, 10**39, 5 * 10**38,
        10**38, 5 * 10**37, 10**37, 5 * 10**36, 10**36, 5 * 10**35,
        10**35, 5 * 10**34, 10**34, 5 * 10**33, 10**33, 5 * 10**32,
        10**32, 5 * 10**31, 10**31, 5 * 10**30, 10**30, 5 * 10**29,
        10**29, 5 * 10**28, 10**28, 5 * 10**27, 10**27, 5 * 10**26,
        10**26, 5 * 10**25, 10**25, 5 * 10**24, 10**24, 5 * 10**23,
        10**23, 5 * 10**22, 10**22, 5 * 10**21, 10**21, 5 * 10**20,
        10**20, 5 * 10**19, 10**19, 5 * 10**18, 10**18, 5 * 10**17,
        10**17, 5 * 10**16, 10**16, 5 * 10**15, 10**15, 5 * 10**14,
        10**14, 5 * 10**13, 10**13, 5 * 10**12, 10**12, 5 * 10**11,
        10**11, 5 * 10**10, 10**10, 5 * 10**9, 10**9, 5 * 10**8,
        10**8, 5 * 10**7, 10**7, 5 * 10**6, 10**6, 5 * 10**5,
        10**5, 5 * 10**4, 10**4, 5 * 10**3, 10**3, 900, 500, 400,
        100, 90, 50, 40, 10, 9, 5, 4, 1
    ];

    const numerals = [
        "q", "w", "e", "r", "t",
        "y", "u", "i", "o", "p",
        "a", "s", "d", "f", "g",
        "h", "j", "k", "l", "z",
        "x", "c", "v", "b", "n",
        "!", "@", "#", "$", "%",
        "^", "&", "*", "(", ")",
        "-", "_", "=", "+", "[",
        "]", "{", "}", "|", "\\",
        ";", ":", "'", '"', ",",
        ".", "<", ">", "/", "?", 
        "`", "~", "Q", "W", "E",
        "R", "T", "Y", "U", "I"
    ];

    let result = '';

    for (let i = 0; i < values.length; i++) {
        while (num >= values[i]) {
            result += numerals[i];
            num -= values[i];
        }
    }

    return result;
}

// Example usage:
console.log(toCustomRoman(100000000000000000000000000000000000000)); // Output: 
